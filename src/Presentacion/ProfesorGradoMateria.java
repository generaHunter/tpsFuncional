/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;


import Datos.MateriaUsuarioJpaController;
import Datos.UsuarioGradoJpaController;
import Datos.exceptions.NonexistentEntityException;
import Logica_Negocio.Grado;
import Logica_Negocio.Materia;
import Logica_Negocio.MateriaUsuario;
import Logica_Negocio.Usuario;
import Logica_Negocio.UsuarioGrado;
import java.math.BigDecimal;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JoseM
 */
public class ProfesorGradoMateria extends javax.swing.JFrame {

    /**
     * Creates new form ProfesorGradoMateria
     */
     UsuarioGrado UsuarioGrado;
     MateriaUsuario MateriaUsuario;
     Usuario Nusuario = new Usuario();
     Usuario EditUsuario;
     Grado Ngrado=new Grado();
     Grado EditGrado;
     Materia Nmateria=new Materia();
     Materia EditMateria;
     DefaultTableModel modeloTable;
     UsuarioGradoJpaController CUsuarioGrado= new UsuarioGradoJpaController();
     MateriaUsuarioJpaController CMateriaUsuario=new MateriaUsuarioJpaController();
     UsuarioGrado UsuarioGradoEdit;
     MateriaUsuario MateriaUsuarioEdit;
     
    public ProfesorGradoMateria() {
        initComponents();
        Nmateria.ComboMateria(cbMateria);
        Nusuario.ComboUsuario(cbProfesor);
        Ngrado.ComboGrado(cbGrado);
        modeloTable = (DefaultTableModel) this.tablaProfesor.getModel();
        this.CargarProfesor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnActualizat = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cbProfesor = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cbMateria = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cbGrado = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProfesor = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Asignar grado y materia a profesores");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnActualizat.setText("Actualizar");
        btnActualizat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizatActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel2.setText("Profesor:");

        jLabel4.setText("Materia:");

        jLabel5.setText("Grado:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(btnActualizat, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbGrado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbMateria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbGrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizat, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        jLabel3.setText("Lista de profesores.");

        tablaProfesor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Profesor", "EntidadUsu", "Materia", "EntidadMateria", "EntidadMatxUsu", "Grado", "EntidadGrado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProfesor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaProfesorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaProfesor);
        if (tablaProfesor.getColumnModel().getColumnCount() > 0) {
            tablaProfesor.getColumnModel().getColumn(2).setMinWidth(0);
            tablaProfesor.getColumnModel().getColumn(2).setPreferredWidth(0);
            tablaProfesor.getColumnModel().getColumn(2).setMaxWidth(0);
            tablaProfesor.getColumnModel().getColumn(4).setMinWidth(0);
            tablaProfesor.getColumnModel().getColumn(4).setPreferredWidth(0);
            tablaProfesor.getColumnModel().getColumn(4).setMaxWidth(0);
            tablaProfesor.getColumnModel().getColumn(5).setMinWidth(0);
            tablaProfesor.getColumnModel().getColumn(5).setPreferredWidth(0);
            tablaProfesor.getColumnModel().getColumn(5).setMaxWidth(0);
            tablaProfesor.getColumnModel().getColumn(7).setMinWidth(0);
            tablaProfesor.getColumnModel().getColumn(7).setPreferredWidth(0);
            tablaProfesor.getColumnModel().getColumn(7).setMaxWidth(0);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(91, 91, 91))
            .addGroup(layout.createSequentialGroup()
                .addGap(268, 268, 268)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public UsuarioGrado llenarEntidadUsuarioGrado() {
        try {          
             UsuarioGrado = new UsuarioGrado();
             Nusuario.setIdUsuario(this.cbProfesor.getItemAt(this.cbProfesor.getSelectedIndex()).getIdUsuario());
             Ngrado.setIdGrado(this.cbGrado.getItemAt(this.cbGrado.getSelectedIndex()).getIdGrado());
             UsuarioGrado.setIdUsuario(Nusuario);
             UsuarioGrado.setIdGrado(Ngrado);
             
            return UsuarioGrado;
        } catch (Exception e) {
        }
        return null;
    }
    
        public MateriaUsuario llenarEntidadMateriaUsuario() {

        try {          
            MateriaUsuario=new MateriaUsuario();
            Materia Nwmateria=new Materia();
            Nwmateria.setIdMateria(this.cbMateria.getItemAt(this.cbMateria.getSelectedIndex()).getIdMateria());
            MateriaUsuario.setIdMateria(Nwmateria);
            MateriaUsuario.setIdUsuario(Nusuario);
            return MateriaUsuario;
        } catch (Exception e) {
        }
        return null;
    }
    
         public void CargarProfesor() {
        try {
            modeloTable.setRowCount(0);
            Object o[] = null;
            List<UsuarioGrado> ListA = CUsuarioGrado.findUsuarioGradoEntities();
            List<MateriaUsuario> ListM = CMateriaUsuario.findMateriaUsuarioEntities();
            for (int i = 0; i < ListA.size(); i++) {
            
                modeloTable.addRow(o);
               
                modeloTable.setValueAt(ListA.get(i), i, 0);
                modeloTable.setValueAt(ListA.get(i).getIdUsuario().getNombre()+" "+ListA.get(i).getIdUsuario().getApellido(), i, 1);
                modeloTable.setValueAt(ListA.get(i).getIdUsuario(), i, 2);
                modeloTable.setValueAt(ListM.get(i).getIdMateria().getMateria(), i, 3); 
                modeloTable.setValueAt(ListM.get(i).getIdMateria(), i, 4); 
                modeloTable.setValueAt(ListM.get(i), i, 5);
                modeloTable.setValueAt(ListA.get(i).getIdGrado().getGrado(), i, 6);
                modeloTable.setValueAt(ListA.get(i).getIdGrado(), i, 7);
            }

        } catch (Exception e) {
        }
    }
    
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
          try {
              this.CUsuarioGrado.create(this.llenarEntidadUsuarioGrado());
              this.CMateriaUsuario.create(this.llenarEntidadMateriaUsuario());
              this.CargarProfesor();
        } catch (Exception ex) {
           JOptionPane.showMessageDialog(null, ex);
        }

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnActualizatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizatActionPerformed
        // TODO add your handling code here:
        try {
                int opcion = JOptionPane.showConfirmDialog(null, "Está seguro que desea actualizar al alumno", "Actualizar Alumno", JOptionPane.YES_NO_OPTION);
                if (opcion == 0) 
                {
                    this.EditGrado.setIdGrado(this.cbGrado.getItemAt(this.cbGrado.getSelectedIndex()).getIdGrado());
                    this.UsuarioGradoEdit.setIdGrado(EditGrado);
                    this.UsuarioGradoEdit.setIdUsuario(Nusuario);
                    this.EditUsuario.setIdUsuario(this.cbProfesor.getItemAt(this.cbProfesor.getSelectedIndex()).getIdUsuario());
                    this.EditMateria.setIdMateria(this.cbMateria.getItemAt(this.cbMateria.getSelectedIndex()).getIdMateria());
                    this.MateriaUsuarioEdit.setIdUsuario(EditUsuario);
                    this.MateriaUsuarioEdit.setIdMateria(EditMateria);
                    this.CUsuarioGrado.edit(UsuarioGradoEdit);
                    this.CMateriaUsuario.edit(MateriaUsuarioEdit);
                    this.CargarProfesor();
                }
                
            } catch (Exception e)     
             {

               JOptionPane.showMessageDialog(null, e);
             }

    }//GEN-LAST:event_btnActualizatActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
  
        int indice = this.tablaProfesor.getSelectedRow();

        try {
            BigDecimal bigDecimalValue = new BigDecimal(modeloTable.getValueAt(indice, 0).toString());
            BigDecimal bigDecimalValue2 = new BigDecimal(modeloTable.getValueAt(indice, 5).toString());
            int opcion = JOptionPane.showConfirmDialog(null, "Está seguro que desea eliminar ", "Eliminar ", JOptionPane.YES_NO_OPTION);
            if (opcion == 0) {
               this.CUsuarioGrado.destroy(bigDecimalValue);
               this.CMateriaUsuario.destroy(bigDecimalValue2);
               this.CargarProfesor();
            }
            
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(usuariosForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tablaProfesorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProfesorMouseClicked
        // TODO add your handling code here:
        try {  
                int indice = this.tablaProfesor.getSelectedRow();
                if (indice > -1) 
                {   
                   for(int i = 0; i < this.cbProfesor.getItemCount(); i++)
                   {
                       if(this.cbProfesor.getItemAt(i).toString().equals(modeloTable.getValueAt(indice, 1).toString()))
                       {
                           this.cbProfesor.setSelectedIndex(i);
                            break;
                       }
                       
                   }
                   for(int i = 0; i < this.cbMateria.getItemCount(); i++)
                   {
                       if(this.cbMateria.getItemAt(i).toString().equals(modeloTable.getValueAt(indice, 3).toString()))
                       {
                           this.cbMateria.setSelectedIndex(i);
                            break;
                       }
                       
                   }
                   for(int i = 0; i < this.cbGrado.getItemCount(); i++)
                   {
                       if(this.cbGrado.getItemAt(i).toString().equals(modeloTable.getValueAt(indice, 6).toString()))
                       {
                           this.cbGrado.setSelectedIndex(i);
                            break;
                       }
                       
                   }
                    UsuarioGradoEdit    = (UsuarioGrado) tablaProfesor.getValueAt(tablaProfesor.getSelectedRow(), 0);
                    MateriaUsuarioEdit  = (MateriaUsuario) tablaProfesor.getValueAt(tablaProfesor.getSelectedRow(), 5);
                }
         } catch (Exception e) 
            {
                
            }

    }//GEN-LAST:event_tablaProfesorMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProfesorGradoMateria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProfesorGradoMateria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProfesorGradoMateria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProfesorGradoMateria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProfesorGradoMateria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizat;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JComboBox<Grado> cbGrado;
    private javax.swing.JComboBox<Materia> cbMateria;
    private javax.swing.JComboBox<Usuario> cbProfesor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaProfesor;
    // End of variables declaration//GEN-END:variables
}
